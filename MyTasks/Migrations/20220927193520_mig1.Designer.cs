// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyTasks.Concrete;

#nullable disable

namespace MyTasks.Migrations
{
    [DbContext(typeof(ProductContect))]
    [Migration("20220927193520_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyTasks.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MainCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("categoryCode")
                        .HasColumnType("int");

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MainCategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("MyTasks.Models.ProductMainCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("mainCategoryCode")
                        .HasColumnType("int");

                    b.Property<string>("mainCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductMainCategories");
                });

            modelBuilder.Entity("MyTasks.Models.ProductSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("productCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("subCategoryCode")
                        .HasColumnType("int");

                    b.Property<string>("subCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("productCategoryId");

                    b.ToTable("ProductSubCategories");
                });

            modelBuilder.Entity("MyTasks.Models.ProductCategory", b =>
                {
                    b.HasOne("MyTasks.Models.ProductMainCategory", "MainCategory")
                        .WithMany("productCategories")
                        .HasForeignKey("MainCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainCategory");
                });

            modelBuilder.Entity("MyTasks.Models.ProductSubCategory", b =>
                {
                    b.HasOne("MyTasks.Models.ProductCategory", "productCategory")
                        .WithMany("productSubCategories")
                        .HasForeignKey("productCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productCategory");
                });

            modelBuilder.Entity("MyTasks.Models.ProductCategory", b =>
                {
                    b.Navigation("productSubCategories");
                });

            modelBuilder.Entity("MyTasks.Models.ProductMainCategory", b =>
                {
                    b.Navigation("productCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
